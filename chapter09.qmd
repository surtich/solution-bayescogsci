---
title: "Exercises chapter 9"
warning: false
echo: false
cache: true
error: false
render: html
---

```{r}
library(latex2exp)
library(tidyverse)
library(ggplot2)
library(brms)
library(parallel)
library(bcogsci)
library(gt)
library(patchwork)
library(broom.mixed)
library(bayesplot)
library(MASS)
library(hypr)

options(mc.cores = parallel::detectCores())
```

## Exercise 9.1 ANOVA coding for a four-condition design.

Load the following data. These data are from Experiment 1 in a set of reading studies on Persian (Safavi, Husain, and Vasishth 2016); we encountered these data in the preceding chapter’s exercises.

```{r}
head(df_persianE1) |> gt()
```

The four conditions are:

Distance=short and Predictability=unpredictable
Distance=short and Predictability=predictable
Distance=long and Predictability=unpredictable
Distance=long and Predictability=predictable

For the data given above, define an ANOVA-style contrast coding, and compute main effects and interactions. Check with `hypr` what the estimated comparisons are with an ANOVA coding.

```{r}
c(
  "grand mean" = mean(df_persianE1$rt),

  "long - short" = df_persianE1 |> summarize(value = mean(rt), .by=distance) |> pivot_wider(names_from = distance) |> mutate("long - short" = long-short) |> pull("long - short"),
  
  "predictable - unpredictable" = df_persianE1 |> summarize(value = mean(rt), .by=predability) |> pivot_wider(names_from = predability) |> mutate("predictable - unpredictable" = predictable-unpredictable) |> pull("predictable - unpredictable"),
  
  "interaction" = df_persianE1 |> mutate(interaction = 4*rt*case_when(
  distance == "short" & predability == "unpredictable" ~ 1,
  distance == "short" & predability == "predictable" ~ -1,
  distance == "long" & predability == "unpredictable" ~ -1,
  distance == "long" & predability == "predictable" ~ 1
)) |> summarise(interaction = mean(interaction)) |> pull(interaction)
) |> t() |> data.frame(check.names = FALSE) |> gt() |> fmt_number(decimals = 2)


```


```{r}
dat1 <- mutate(df_persianE1,
  distance = factor(distance, levels=c("short", "long")),
  predability = factor(predability, levels=c("unpredictable", "predictable"))
)

contrasts(dat1$distance) = c(-0.5, .5)
contrasts(dat1$predability) = c(-.5, .5)

coefficients(lm(rt ~ distance*predability, data=dat1)) |> 
  data.frame() |>
  rownames_to_column() |> 
  rename(Coef=1, Value=2) |> 
  gt() |> fmt_number(decimals = 2)
```


```{r}
#| eval: false
XcTr <- dat1 |> 
  group_by(distance, predability) |>
  summarise() |>
  ungroup()

XcTr <- model.matrix(~ distance*predability, XcTr)
  as.matrix()
  
rownames(XcTr) <- c("short_unpredictable",	"short_predictable",	"long_unpredictable",	"long_predictable")

htr <- hypr()
cmat(htr) <- XcTr

htr
```

## Exercise 9.2 ANOVA and nested comparisons in a $2 \times 2 \times 2$ design.

Load the following data set. This is a $2 \times 2 \times 2$ design from Jäger et al. (2020), with the factors Grammaticality (grammatical vs. ungrammatical), Dependency (Agreement vs. Reflexives), and Interference (Interference vs. no interference). The experiment is a replication attempt of Experiment 1 reported in Dillon et al. (2013).

```{r}
head(df_dillonrep) |> gt()
```

* The grammatical conditions are a,b,e,f. The rest of the conditions are ungrammatical.
* The agreement conditions are a,b,c,d. The other conditions are reflexives.
* The interference conditions are a,d,e,h, and the others are the no-interference conditions.

The dependent measure of interest is TFT (total fixation time, in milliseconds).

Using a linear model, do a main effects and interactions ANOVA contrast coding, and obtain an estimate of the main effects of Grammaticality, Dependency, and Interference, and all interactions. You may find it easier to code the contrasts coding the main effects as +1, -1, using `ifelse()` in R to code vectors corresponding to each main effect. This will make the specification of the interactions easy.

```{r}
dat2 <- df_dillonrep |> mutate(cond = factor(cond),
                               Grammaticality = factor(ifelse(cond %in% c("a", "b", "e", "f"), "grammatical", "ungrammatical")),
                               Dependency = factor(ifelse(cond %in% c("a", "b", "c", "d"), "agreement", "reflexives")),
                               Interference = factor(ifelse(cond %in% c("a", "d", "e", "h"), "interference", "no-interference")))


contrasts(dat2$Grammaticality) = contr.sum(2)
contrasts(dat2$Dependency) = contr.sum(2)
contrasts(dat2$Interference) = contr.sum(2)

coefficients(lm(TFT ~ Grammaticality*Dependency*Interference, data=dat2)) |> 
  data.frame() |>
  rownames_to_column() |> 
  rename(Coef=1, Value=2) |> 
  gt() |> fmt_number(decimals = 2)
```


The researchers had a further research hypothesis: in ungrammatical sentences only, agreement would show an interference effect but reflexives would not. In grammatical sentences, both agreement and reflexives are expected to show interference effects. This kind of research question can be answered with nested contrast coding.

To carry out the relevant nested contrasts, define contrasts that estimate the effects of

* grammaticality
* dependency type
* the interaction between grammaticality and dependency type
* reflexives interference within grammatical conditions
* agreement interference within grammatical conditions
* reflexives interference within ungrammatical conditions
* agreement interference within ungrammatical conditions

Do the estimates match expectations? Check this by computing the condition means and checking that the estimates from the models match the relevant differences between conditions or clusters of conditions.

```{r}
c(
  "grand_mean" = dat2 |> summarise(value = mean(TFT)) |> pull(value),
  "grammatical_ungrammatical" = dat2 |> group_by(Grammaticality) |> summarise(value = mean(TFT)) |> pivot_wider(names_from = Grammaticality) |>
    mutate(value =grammatical - ungrammatical) |> pull(value),
  
  "agreement_reflexives" = dat2 |> group_by(Dependency) |> summarise(value = mean(TFT)) |> pivot_wider(names_from = Dependency) |>
    mutate(value =agreement - reflexives) |> pull(value),
  
  "Grammaticality_Dependency" = (dat2 |> group_by(Grammaticality, Dependency) |> summarise(value=mean(TFT)) |> pivot_wider(names_from = c(Grammaticality, Dependency)) |> mutate(value = grammatical_agreement - grammatical_reflexives - ungrammatical_agreement + ungrammatical_reflexives) |> pull(value))*2,
  
  dat2 |> filter(Interference == "interference") |> group_by(Grammaticality, Dependency) |>
  summarise(value=mean(TFT)) |> pivot_wider(names_from = c(Grammaticality, Dependency)) |> mutate(value1=grammatical_agreement - grammatical_reflexives, value2=ungrammatical_agreement - ungrammatical_reflexives) |> dplyr::select("agreement_reflexives | interference, grammatical"=value1, "agreement_reflexives | interference, ungrammatical"=value2) |> unlist() 
) |> t() |> data.frame(check.names = FALSE) |> pivot_longer(cols=everything(), names_to = "contrast", values_to = "value") |> gt() |> fmt_number(decimals = 2) 
```

```{r}
H <- hypr(
  "grammatical_ungrammatical" = (a + b + e + f)/4 ~ (c + d + g + h)/4,
  "agreement_reflexives" = (a + b + c + d)/4 ~ (e + f + g + h)/4,
  "Grammaticality_Dependency" = a + b - e - f ~ c + d - g - h,
  "Dependency | grammatical, interference" =  a ~ e ,
  "Dependency | ungrammatical, interference" =  d ~ h
)

contrasts(dat2$cond) <- contr.hypothesis(H)

coefficients(lm(TFT ~ cond, data = dat2)) |> 
  data.frame() |>
  rownames_to_column() |> 
  rename(Coef=1, Value=2) |> 
  gt()
```











